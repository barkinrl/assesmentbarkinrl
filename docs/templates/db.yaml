apiVersion: v1
kind: ConfigMap
metadata:
  name: post-init-scripts
  namespace: {{ .NAMESPACE }}
  labels:
    application: patroni-{{ .CLUSTERNAME }}-db
    cluster-name: {{ .CLUSTERNAME }}
    app: {{ .CLUSTERNAME }}
data:
  001.sql: |
    {{ .USER_AND_DATABASE_CREATE_SCRIPT }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .CLUSTERNAME }}-db
  namespace: {{ .NAMESPACE }}
  labels:
    application: patroni-{{ .CLUSTERNAME }}-db
    cluster-name: {{ .CLUSTERNAME }}-db
    app: {{ .CLUSTERNAME }}
type: Opaque
data:
  superuser-password: {{ .AUTOCREATED }}
  replication-password: {{ .AUTOCREATED }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .CLUSTERNAME }}-db-config
  namespace: {{ .NAMESPACE }}
  labels:
    application: patroni-{{ .CLUSTERNAME }}-db
    cluster-name: {{ .CLUSTERNAME }}-db
    app: {{ .CLUSTERNAME }}
spec:
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .CLUSTERNAME }}-db
  namespace: {{ .NAMESPACE }}
  labels:
    application: patroni-{{ .CLUSTERNAME }}-db
    cluster-name: {{ .CLUSTERNAME }}-db
    app: {{ .CLUSTERNAME }}
spec:
  type: ClusterIP
  selector:
    application: patroni-{{ .CLUSTERNAME }}-db
    cluster-name: {{ .CLUSTERNAME }}-db
    app: {{ .CLUSTERNAME }}
    role: primary
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .CLUSTERNAME }}-db-repl
  namespace: {{ .NAMESPACE }}
  labels:
    application: patroni-{{ .CLUSTERNAME }}-db
    cluster-name: {{ .CLUSTERNAME }}-db
    app: {{ .CLUSTERNAME }}
spec:
  type: ClusterIP
  selector:
    application: patroni-{{ .CLUSTERNAME }}-db
    cluster-name: {{ .CLUSTERNAME }}-db
    app: {{ .CLUSTERNAME }}
    role: replica
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .CLUSTERNAME }}-db
  namespace: {{ .NAMESPACE }}
  labels:
    application: patroni-{{ .CLUSTERNAME }}-db
    cluster-name: {{ .CLUSTERNAME }}-db
    app: {{ .CLUSTERNAME }}
spec:
  selector:
    matchLabels:
      application: patroni-{{ .CLUSTERNAME }}-db
      cluster-name: {{ .CLUSTERNAME }}-db
      app: {{ .CLUSTERNAME }}
  replicas: {{ .REPLICA_COUNT }}
  serviceName: {{ .CLUSTERNAME }}-db
  template:
    metadata:
      labels:
        application: patroni-{{ .CLUSTERNAME }}-db
        cluster-name: {{ .CLUSTERNAME }}-db
        app: {{ .CLUSTERNAME }}
    spec:
      serviceAccountName: {{ .SANAME }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "cluster-name"
                    operator: In
                    values:
                    - {{ .CLUSTERNAME }}-db
              topologyKey: "kubernetes.io/hostname"
      initContainers:
      - name: chown-pgdata
        image: busybox
        imagePullPolicy: IfNotPresent
        command:
        - chown
        - -R
        - "999:999"
        - "/home/postgres/pgdata"
        volumeMounts:
        - mountPath: /home/postgres/pgdata
          name: pgdata
      containers:
      - name: {{ .CLUSTERNAME }}-db
        image: {{ .IMAGE }}
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /readiness
            port: 8008
          initialDelaySeconds: 3
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        ports:
        - containerPort: 8008
          protocol: TCP
        - containerPort: 5432
          protocol: TCP
        volumeMounts:
        - mountPath: /home/postgres/pgdata
          name: pgdata
        - name: walgbackup
          mountPath: /walg
        - mountPath: /home/postgres/post-init.d
          name: post-init-scripts
        env:
        - name: HOME
          value: /home/postgres
        - name: PATRONI_KUBERNETES_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: PATRONI_KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PATRONI_KUBERNETES_BYPASS_API_SERVICE
          value: 'false'
        - name: PATRONI_KUBERNETES_USE_ENDPOINTS
          value: 'true'
        - name: PATRONI_KUBERNETES_LABELS
          value: '{application: patroni-{{ .CLUSTERNAME }}-db, cluster-name: {{ .CLUSTERNAME }}-db, app: {{ .CLUSTERNAME }}}'
        - name: PATRONI_SUPERUSER_USERNAME
          value: postgres
        - name: PATRONI_SUPERUSER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .CLUSTERNAME }}-db
              key: superuser-password
        - name: PATRONI_REPLICATION_USERNAME
          value: standby
        - name: PATRONI_REPLICATION_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .CLUSTERNAME }}-db
              key: replication-password
        - name: PATRONI_SCOPE
          value: {{ .CLUSTERNAME }}-db
        - name: PATRONI_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PATRONI_POSTGRESQL_DATA_DIR
          value: /home/postgres/pgdata/pgroot/data
        - name: PATRONI_POSTGRESQL_PGPASS
          value: /tmp/pgpass
        - name: PATRONI_POSTGRESQL_LISTEN
          value: '0.0.0.0:5432'
        - name: PATRONI_RESTAPI_LISTEN
          value: '0.0.0.0:8008'
        - name: WALG_BACKUP_CONFIG
          value: "/walg/config.json"
        - name: WALG_S3_PREFIX
          value: "{{ .S3_BUCKET_ADDRESS }}"
        - name: DB_ARCHIVE_MODE
          value: "{{ .ARCHIVE_MODE }}"
      terminationGracePeriodSeconds: 0
      volumes:
      - name: walgbackup
        configMap:
          name: walgbackup
          defaultMode: 0444
          items:
          - key: config.json
            path: config.json
      - name: post-init-scripts
        configMap:
          name: post-init-scripts
          defaultMode: 0444
  volumeClaimTemplates:
  - metadata:
     labels:
       application: patroni-{{ .CLUSTERNAME }}-db
       cluster-name: {{ .CLUSTERNAME }}-db
     name: pgdata
    spec:
     storageClassName: {{ .STORAGE_CLASS_NAME }}
     accessModes:
     - ReadWriteOnce
     resources:
       requests:
         storage: 5Gi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-{{ .CLUSTERNAME }}-db
  namespace: {{ .NAMESPACE }}
  labels:
    application: patroni-{{ .CLUSTERNAME }}-db
    cluster-name: {{ .CLUSTERNAME }}-db
    app: {{ .CLUSTERNAME }}
spec:
  schedule: "45 00 * * *"
  suspend: {{ .SUSPEND }}
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: {{ .SANAME }}
          restartPolicy: Never
          containers:
          - name: backup-{{ .CLUSTERNAME }}-db
            command:
            - /walg/backup.sh
            image: bitnami/kubectl:1.31
            imagePullPolicy: IfNotPresent
            env:
            - name: DB_CLUSTER
              value: {{ .CLUSTERNAME }}-db
            - name: WALG_CONFIG
              value: /walg/config.json
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            volumeMounts:
            - name: walgbackup
              mountPath: /walg
          volumes:
          - name: walgbackup
            configMap:
              name: walgbackup
              defaultMode: 0755
              items:
              - key: backup.sh
                path: backup.sh

